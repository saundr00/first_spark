services:
  postgres:
    image: postgres
    container_name: postgres-spark-metastore
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/mnt/pg-data/data
    ports:
      - 5432:5432
    networks:
      - spark-net
    volumes:
      - pg-data:/mnt/pg-data
      - ./db_init:/docker-entrypoint-initdb.d

  set-permissions:
    image: saundr00/spark:v1
    container_name: set-permissions
    hostname: set-permissions
    depends_on:
      - postgres
    user: root
    command: chown -R spark:spark /mnt/data
    networks:
      - spark-net
    volumes:
      - spark-vol:/mnt/data

  spark-master:
    image: saundr00/spark:v1
    container_name: spark-master
    hostname: "spark-master"
    build:
      dockerfile: Dockerfile.spark
    stdin_open: true
    tty: true
    command: "/opt/spark/sbin/start-master.sh"
    environment:
      - SPARK_NO_DAEMONIZE=TRUE
    ports:
      - "7077:7077"
      - "8080:8080"
      - "4040:4040"
    depends_on:
      - set-permissions
    networks:
      - spark-net
    volumes:
      - spark-vol:/mnt/data
    
  spark-client:
    image: saundr00/spark-client:v1
    container_name: spark-client
    hostname: "spark-client"
    build:
      dockerfile: Dockerfile.spark-client
    stdin_open: true
    tty: true
    command: bash
    environment:
      - SPARK_NO_DAEMONIZE=TRUE
    ports:
      - "8889:8889"
    networks:
      - spark-net
    volumes_from:
      - spark-master

  spark-worker-1:
    image: saundr00/spark:v1
    container_name: spark-worker-1
    hostname: spark-worker-1
    build:
      dockerfile: Dockerfile.spark
    stdin_open: true
    tty: true
    command: "/opt/spark/sbin/start-worker.sh spark://spark-master:7077"
    environment:
      - SPARK_NO_DAEMONIZE=TRUE
    ports:
      - "8081:8081"
    depends_on:
      - spark-master
    networks:
      - spark-net
    volumes_from:
      - spark-master

  spark-worker-2:
    image: saundr00/spark:v1
    container_name: spark-worker-2
    hostname: spark-worker-2
    build:
      dockerfile: Dockerfile.spark
    stdin_open: true
    tty: true
    command: "/opt//spark/sbin/start-worker.sh spark://spark-master:7077"
    environment:
      - SPARK_NO_DAEMONIZE=TRUE
    ports:
      - "8082:8081"
    depends_on:
      - spark-master
    networks:
      - spark-net
    volumes_from:
      - spark-master

  spark-worker-3:
    image: saundr00/spark:v1
    container_name: spark-worker-3
    hostname: spark-worker-3
    build:
      dockerfile: Dockerfile.spark
    stdin_open: true
    tty: true
    command: "/opt/spark/sbin/start-worker.sh spark://spark-master:7077"
    environment:
      - SPARK_NO_DAEMONIZE=TRUE
    ports:
      - "8083:8081"
    depends_on:
      - spark-master
    networks:
      - spark-net
    volumes_from:
      - spark-master

  spark-worker-4:
    image: saundr00/spark:v1
    container_name: spark-worker-4
    hostname: spark-worker-4
    build:
      dockerfile: Dockerfile.spark
    stdin_open: true
    tty: true
    command: "/opt/spark/sbin/start-worker.sh spark://spark-master:7077"
    environment:
      - SPARK_NO_DAEMONIZE=TRUE
    ports:
      - "8084:8081"
    depends_on:
      - spark-master
    networks:
      - spark-net
    volumes_from:
      - spark-master

networks:
  spark-net:
    name: spark-net

volumes:
  spark-vol:
    name: spark-vol
  pg-data:
    name: pg-data
